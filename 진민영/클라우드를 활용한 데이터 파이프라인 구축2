## API Gateway
 - 어떤 규모에서든 개발자가 API를 생성, 게시, 유지 관리, 모니터링 및 보호할 수 있게 해주는 AWS 서비스
 - 모바일 및 웹 애플리케이션에서 AWS 서비스에 액세스할 수 있는 일관된 RESTFul 애플리케이션 프로그래밍 인터페이스(API)를 제공
 - 사용자는 RESTful API를 생성, 구성, 호스팅하여 애플리케이션의 AWS 클라우드 액세스를 지원
 
 
## S3
 - 버킷
   *Amazon S3에 저장된 객체에 대한 컨테이너
   *모든 객체는 어떤 버킷에 포함
   *쉽게 이해해서 윈도우의 Root 폴더 라고 이해를 하면 된다.
 
 - 객체
   *Amazon S3에 저장되는 기본 개체
   *객체는 객체 데이터와 메타데이터 로 구성된다.

 - 키
   *버킷 내 객체의 고유한 식별자 
   *버킷 내 모든 객체는 정확히 하나의 키를 갖는다.
   *버킷, 키 및 버전 ID의 조합이 각 객 체를 고유하게 식별하기 때문에 Amazon S3는 "버킷+ 키+ 버전" 과 객체 자체 사이의 기본 데이터 맵으로 간주할 수 있다.
   

## 저장 Architecture
 - 저장 용량 무제한이다 (S3 사용)
 - 요청에 의한 데이터 파이프라인을 쉽게 구성 데이터 수집 저장이 가능함.
 - 요청이 많아져도 Kinesis Stream 의 shard 조정만으로 빠른 scalability 처리.
 - 데이터 유실에 대한 Kinesis Stream 에서 기본적으로 24시간의 데이터보존기능
 - S3에 반 정형화된 JSON 형식의 데이터로 저장하므로 가변적 값의 데이터 수집(Query Parameter 값이 변화에 대해서)에 대한 유연한 분석이 가능.
 - Serverless 의 운영비용 감소


## EC2 (Amazon Elastic Compute Cloud)
인스턴스 가상 컴퓨팅 환경
 - Amazon 머신 이미지(AMI): 서버에 필요한 운영체제와 서커 소프트웨어들이 적절히 구성된 상태로 제공되는 템플릿으로 인스턴스를 쉽게 만들 수 있음
 - 인스턴스 유형: 인스턴스를 위한 CPU, 메모리, 스토리지, 워킹 용량의 여러 가지 구성 제공
 - 키 쌍을 사용해 인스턴스 로그인 정보 보호 (AWS는 용기를 저지하고 사용자는 개인 키를 안전한 장소에 보관하는 방식)
 - 인스턴스 스토어 볼륨: 임시 데이터를 저장하는 스토리지 볼륨으로 인스턴스 종료 시 삭제됨
 - Amazon Elastic Block Store(Amazon EBS), 즉 Amazon EBS 볼륨을 사용해 영구 스토리지 볼륨에 데이터 저장
 - 인스턴스와 Amazon EBS 볼륨 등의 리소스를 다른 물리적 장소에서 액세스할 수 있는 리전 및 가용 영역
 -  탄력적 IP 주소(EIP): 동적 클라우드 컴퓨팅을 위한 고정 IPv4 주소
 - 보안 그룹을 사용해 인스턴스에 연결할 수 있는 프로토콜, 포트, 소스 IP 범위를 지정하는 방화벽 기능
 - 태그: 사용자가 생성하여 Amazon EC2 리소스에 할당할 수 있는 메타데이터
